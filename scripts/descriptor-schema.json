{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "Ouinet URI descriptor v0",
    "description": "A URI descriptor is a set of different versions of the data and metadata behind a URI which make sense as a whole according to a particular injector service.",

    "type": "object",
    "properties": {
        "ouinet_descriptor_version": {
            "description": "The version of the schema that this descriptor adheres to.",
            "type": "integer",
            "const": 0,
            "$comment": "The same number indicated at the schema's title."
        },
        "uri": {
            "description": "The URI that this descriptor describes.",
            "type": "string",
            "$comment": "TODO: Check against URI regular expression."
        },
        "ts": {
            "description": "An ISO time stamp of the UTC time when this descriptor was created.",
            "type": "string",
            "$comment": "TODO: Check against time regular expression."
        },
        "versions": {
            "description": "The different versions of the URI bound together by this descriptor.",
            "type": "array",
            "items": {
                "description": "A particular version of the URI with a fixed data length and hash, and optional metadata.",
                "type": "object",
                "properties": {
                    "ts": {
                        "description": "An ISO time stamp of the UTC time when this version was last seen by the injector.",
                        "type": "string",
                        "$comment": "TODO: Check against time regular expression."
                    },
                    "data_length": {
                        "description": "Length of this version's data in bytes.",
                        "type": "integer",
                        "minimum": 0
                    },
                    "data_hash": {
                        "description": "A self-describing, hex-encoded digest of this version's data using the indicated hash algorithm.",
                        "type": "string",
                        "$comment": "TODO: Check against hash regular expression."
                    }
                },
                "patternProperties": {
                    "^meta_[_0-9a-z]+": {
                        "description": "A set of arbitrary, named, string-valued properties acting as metadata (e.g. for the particular URI protocol).",
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                },

                "required": ["ts", "data_length", "data_hash"]
            },

            "minItems": 1
        },
        "signatures": {
            "description": "Signatures of injector services on this descriptor; public key and time stamp are used as signing entity.",
            "type": "object",
            "$comment": "TODO: Check public key and signature time stamp in property name.",
            "patternProperties": {
                ".*": {
                    "description": "Signatures of a particular injector service (exactly one for the given key and time).",
                    "type": "object",
                    "$comment": "TODO: Check property names against hash algorithm and key id regular expression, values against unpadded Base64.",
                    "patternProperties": {
                        ".*": {
                            "description": "A particular signature.",
                            "type": "string"
                        }
                    },
                    "minProperties": 1,
                    "maxProperties": 1
                }
            },
            "minProperties": 1
        },
        "unsigned": {
            "description": "This part may be added by cache publishers, but it is not signed by injector services.",
            "type": "object",
            "properties": {
                "data_links": {
                    "description": "If present, it maps data hashes to a list of URIs for data retrieval.",
                    "type": "object",
                    "$comment": "TODO: Check property names against hash regular expressions.",
                    "patternProperties": {
                        ".*": {
                            "description": "A list of URIs for data retrieval.",
                            "type": "array",
                            "items": {
                                "type": "string",
                                "$comment": "TODO: Check against URI regular expression."
                            },
                            "minItems": 1,
                            "uniqueItems": true
                        }
                    },
                    "minProperties": 1
                }
            }
        }
    },

    "required": ["ouinet_descriptor_version", "uri", "ts", "versions", "signatures"]
}
